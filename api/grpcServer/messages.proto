syntax = "proto3";

package grpcServer;

option go_package = "github.com/lessbutter/alloff-api/api/grpcServer";


service Notification {
    rpc ListNoti(ListNotiRequest) returns (ListNotiResponse);
    rpc CreateNoti(CreateNotiRequest) returns (CreateNotiResponse);
    rpc SendNoti(SendNotiRequest) returns (SendNotiResponse);
}

service Brand {
    rpc ListBrand(ListBrandRequest) returns (ListBrandResponse);
    rpc CreateBrand(CreateBrandRequest) returns (CreateBrandResponse);
}

service Product {
    rpc GetProduct(GetProductRequest) returns (GetProductResponse);
    rpc PutProduct(PutProductRequest) returns (PutProductResponse);
    rpc ListProducts(ListProductsRequest) returns (ListProductsResponse);
    rpc CreateProduct(CreateProductRequest) returns (CreateProductResponse);
}

service ProductGroup {
    rpc GetProductGroup(GetProductGroupRequest) returns (GetProductGroupResponse);
    rpc CreateProductGroup(CreateProductGroupRequest) returns (CreateProductGroupResponse);
    rpc ListProductGroups(ListProductGroupsRequest) returns (ListProductGroupsResponse);
    rpc PushProducts(PushProductsRequest) returns (PushProductsResponse);
}

/*
    GRPC API Request & Response
*/

// Notification Service
message ListNotiRequest {
    int32 offset = 1;
    int32 limit = 2;
}
message ListNotiResponse {
    int32 offset = 1;
    int32 limit = 2;
    repeated NotificationMessage notis = 3;
}
message CreateNotiRequest {
    NotiCreateRequst create_request = 1;
}
message CreateNotiResponse {
    NotificationMessage notification = 1;
}
message SendNotiRequest {
    string notification_id = 1;
}
message SendNotiResponse {
    bool is_sent = 1;
}

// Brand Service
message ListBrandRequest {}
message ListBrandResponse {
    repeated BrandMessage brands = 1;
}
message CreateBrandRequest {
    string keyname = 1;
    string korname = 2;
    string engname = 3;
    string logo_image_url = 4;
    string description = 5;
    bool is_popular = 6;
    bool is_open = 7;
    bool in_maintenance = 8;
    repeated SizeGuideMessage sizeguide = 9;
}
message CreateBrandResponse {
    BrandMessage brand = 1;
}

// Product Service
message GetProductRequest {
    string product_id = 1;
}
message GetProductResponse {
    ProductMessage product = 1;
}
message PutProductRequest {
    string product_id = 1;
    int32 special_price = 2;
}
message PutProductResponse {
    ProductMessage product = 1;
}
message ListProductsRequest {
    ProductQuery query = 1;
    int32 offset = 2;
    int32 limit = 3;
}
message ListProductsResponse {
    repeated ProductMessage products = 1;
    int32 offset = 2;
    int32 limit = 3;
    int32 total_counts = 4;
    ProductQuery list_query = 5;
}
message CreateProductRequest {
    ProductCreateRequest create_request = 1;
}
message CreateProductResponse {
    ProductMessage product = 1;
}

// Product Group Service
message GetProductGroupRequest {
    string product_id = 1;
}
message GetProductGroupResponse {
    ProductMessage product = 1;
}
message CreateProductGroupRequest {
    string title = 1;
    string short_title = 2;
    repeated string instruction = 3;
    string image_url = 4;
    string start_time = 5;
    string finish_time = 6;
}
message CreateProductGroupResponse {
    ProductGroupMessage pg = 1;
}
message ListProductGroupsRequest {}
message ListProductGroupsResponse {
    repeated ProductGroupMessage pgs = 1;
}
message PushProductsRequest {
    string product_group_id = 1;
    repeated string product_id = 2;
}
message PushProductsResponse {
    ProductGroupMessage pg = 1;
}

/*
    GRPC Structs
*/

message ProductMessage {
    string product_id = 1;
    string alloff_name = 2;
    int32 discounted_price = 3;
    int32 discount_rate = 4;
    int32 special_price = 5;
    string brand_kor_name = 6;
    string category_name = 7;
    string alloff_category_name = 8;
    bool is_removed = 9;
    bool is_soldout = 10;
    repeated InventoryMessage inventory = 11;
    int32 total_score = 12;
}

message InventoryMessage {
    string size = 1;
    string quantity = 2;
}

message ProductInGroupMessage {
    ProductMessage product = 1;
    int32 priority = 2;
}

message ProductGroupMessage {
    string title = 1;
    string short_title = 2;
    repeated string instruction = 3;
    string image_url = 4;
    repeated ProductInGroupMessage products = 5;
    string start_time = 6;
    string finish_time = 7;
}

message NotificationMessage {
    string notification_id = 1;
    string status = 2;
    string type = 3;
    string reference_id = 4;
    string title = 5;
    string message = 6;
    string sended_at = 7;
}

message BrandMessage {
    string korname = 1;
    string keyname = 2;
    string logo_image_url = 3;
    bool is_popular = 4;
    bool is_open = 5;
    bool in_maintenance = 6;
    repeated SizeGuideMessage size_guide = 7;
}

message SizeGuideMessage {
    string label = 1;
    string image_url = 2;
}

/*
    GRPC Queries
*/

message ProductQuery {
    optional string search_query = 1;
    optional string brand_id = 2;
    optional string category_id = 3;
    optional string alloff_category_id = 4;
}

message ProductCreateRequest {
    string alloff_name = 1;
    bool is_foreign_delivery = 2;
    string product_id = 3;
    optional int32 original_price = 4;
    optional int32 discounted_price = 5;
    int32 special_price = 6;
    string brand_key_name = 7;
    repeated InventoryMessage inventory = 8;
    string description = 9;
}

message NotiCreateRequst {
    string type = 1;
    string reference_id = 2;
    string title = 3;
    string message = 4;
}