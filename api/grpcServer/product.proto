syntax = "proto3";

package grpcServer;

option go_package = "github.com/lessbutter/alloff-api/api/grpcServer";


service Product {
    rpc GetProduct(GetProdcutRequest) returns (GetProductResponse);
    rpc PutProduct(PutProductRequest) returns (PutProductResponse);
    rpc ListProducts(ListProductsRequest) returns (ListProductsResponse);
}

service ProductGroup {
    rpc GetProductGroup(GetProductGroupRequest) returns (GetProductGroupResponse);
    rpc PostProductGroup(PostProductGroupRequest) returns (PostProductGroupResponse);
    rpc ListProductGroups(ListProductGroupsRequest) returns (ListProductGroupsResponse);
    rpc PushProducts(PushProductsRequest) returns (PushProductsResponse);
}

/*
    GRPC API Request & Response
*/

message GetProdcutRequest {
    string product_id = 1;
}
message GetProductResponse {
    ProductMessage product = 1;
}
message PutProductRequest {
    string product_id = 1;
    int32 special_price = 2;
}
message PutProductResponse {
    ProductMessage product = 1;
}
message ListProductsRequest {
    ProductQuery query = 1;
    int32 offset = 2;
    int32 limit = 3;
}
message ListProductsResponse {
    repeated ProductMessage products = 1;
    int32 offset = 2;
    int32 limit = 3;
    int32 total_counts = 4;
    ProductQuery list_query = 5;
}

message GetProductGroupRequest {
    string product_id = 1;
}
message GetProductGroupResponse {
    ProductMessage product = 1;
}
message PostProductGroupRequest {
    string title = 1;
    string short_title = 2;
    repeated string instruction = 3;
    string image_url = 4;
    string start_time = 5;
    string finish_time = 6;
}
message PostProductGroupResponse {
    ProductGroupMessage pg = 1;
}
message ListProductGroupsRequest {}
message ListProductGroupsResponse {
    repeated ProductGroupMessage pgs = 1;
}
message PushProductsRequest {
    string product_group_id = 1;
    repeated string product_id = 2;
}
message PushProductsResponse {
    ProductGroupMessage pg = 1;
}

/*
    GRPC Structs
*/

message ProductMessage {
    string product_id = 1;
    string alloff_name = 2;
    int32 discounted_price = 3;
    int32 discount_rate = 4;
    int32 special_price = 5;
    string brand_kor_name = 6;
    string category_name = 7;
    string alloff_category_name = 8;
    bool is_removed = 9;
    bool is_soldout = 10;
    repeated InventoryMessage inventory = 11;
    int32 total_score = 12;
}

message InventoryMessage {
    string size = 1;
    string quantity = 2;
}

message ProductInGroupMessage {
    ProductMessage product = 1;
    int32 priority = 2;
}

message ProductGroupMessage {
    string title = 1;
    string short_title = 2;
    repeated string instruction = 3;
    string image_url = 4;
    repeated ProductInGroupMessage products = 5;
    string start_time = 6;
    string finish_time = 7;
}

/*
    GRPC Queries
*/

message ProductQuery {
    optional string search_query = 1;
    optional string brand_id = 2;
    optional string category_id = 3;
    optional string alloff_category_id = 4;
}