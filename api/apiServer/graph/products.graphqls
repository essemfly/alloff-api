enum ProductsSortingType {
  PRICE_ASCENDING
  PRICE_DESCENDING
  DISCOUNT_0_30
  DISCOUNT_30_50
  DISCOUNT_50_70
  DISCOUNT_70_100
  DISCOUNTRATE_ASCENDING
  DISCOUNTRATE_DESCENDING
  INVENTORY_ASCENDING
  INVENTORY_DESCENDING
}

enum DeliveryType {
  DOMESTIC_DELIVERY
  FOREIGN_DELIVERY
}

enum AlloffProductType {
  MALE
  FEMALE
  KIDS
  SPORTS
}

type AlloffCategory {
  id: ID!
  name: String!
  keyName: String!
  level: Int!
  parentId: ID!
  imgUrl: String!
}

type AlloffSize {
  id: ID!
  alloffCategory: AlloffCategory!
  alloffSizeName: String!
}

type Inventory {
  size: String!
  quantity: Int!
  alloffSize: AlloffSize!
}

type Product {
  id: ID!
  isNotSale: Boolean!
  brand: Brand!
  alloffCategory: AlloffCategory!
  name: String!
  originalPrice: Int!
  discountedPrice: Int!
  discountRate: Int!
  images: [String!]!
  thumbnailImage: String!
  inventory: [Inventory!]!
  isSoldout: Boolean!
  description: ProductDescription!
  deliveryDescription: DeliveryDescription!
  cancelDescription: CancelDescription!
  information: [KeyValueInfo!]
  exhibitionId: String!
  exhibitionStartTime: Date!
  exhibitionFinishTime: Date!
}

type AlloffInventory {
  alloffSize: AlloffSize!
  quantity: Int!
}

type ProductDescription {
  images: [String!]
  texts: [String!]
  infos: [KeyValueInfo!]
}

type DeliveryDescription {
  deliveryType: DeliveryType!
  deliveryFee: Int!
  earliestDeliveryDays: Int!
  latestDeliveryDays: Int!
  texts: [String!]
}

type CancelDescription {
  refundAvailable: Boolean!
  changeAvailable: Boolean!
  changeFee: Int!
  refundFee: Int!
}

input InventoryInput {
  size: String!
  quantity: Int!
}

type KeyValueInfo {
  key: String!
  value: String!
}

input ProductsInput {
  offset: Int!
  limit: Int!
  productType: AlloffProductType!
  exhibitionId: String!
  alloffCategoryId: String
  brandIds: [String!]
  alloffSizeIds: [String!]
  sorting: [ProductsSortingType!]
}

type ProductsOutput {
  totalCount: Int!
  offset: Int!
  limit: Int!
  exhibitionId: String!
  products: [Product!]!
}

extend type Query {
  product(id: String!): Product!
  products(input: ProductsInput!): ProductsOutput!
}
