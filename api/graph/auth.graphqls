input NewUser {
  uuid: String!
  mobile: String!
  name: String
  email: String
  baseAddress: String
  detailAddress: String
  postcode: String
}

input Login {
  uuid: String!
  mobile: String!
}

input RefreshTokenInput {
  token: String!
}

type User {
  id: ID!
  uuid: String!
  mobile: String!
  name: String
  email: String
  baseAddress: String
  detailAddress: String
  postcode: String
}

type Device {
  id: ID!
  deviceId: String!
  allowNotification: Boolean!
  userId: String
}

input UserInfoInput {
  uuid: String
  name: String
  mobile: String
  email: String
  baseAddress: String
  detailAddress: String
  postcode: String
}

extend type Query {
  user: User
}

extend type Mutation {
  registerNotification(deviceId: String!, allowNotification: Boolean!, userId: String): Device!
  createUser(input: NewUser!): String!
  updateUserInfo(input: UserInfoInput!): User!
  login(input: Login!): String!
  refreshToken(input: RefreshTokenInput!): String!
}
